CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    chat_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    user_name VARCHAR(255) NOT NULL,
    registration_date TIMESTAMP NOT NULL,
    korpus VARCHAR(100),
    cohort VARCHAR(10),
    user_status VARCHAR(20) NOT NULL,
    alert_level SMALLINT
);

CREATE TABLE IF NOT EXISTS groups (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_id BIGINT NOT NULL,
    group_title VARCHAR(255),
    invite_link VARCHAR(255),
    number_of_member INT,
    moderator BIGINT,
    chat_id BIGINT,
    korpus VARCHAR
(
    100
),
    cohort VARCHAR
(
    10
)
);

CREATE TABLE IF NOT EXISTS group_message (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_id BIGINT NOT NULL,
    group_title VARCHAR(255),
    user_name VARCHAR(255),
    user_id BIGINT,
    message_text TEXT
);

CREATE TABLE IF NOT EXISTS user_groups (
    user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
    group_id BIGINT REFERENCES groups (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, group_id)
);

CREATE TABLE IF NOT EXISTS group_subscriptions_association
(
    group_id          BIGINT      NOT NULL REFERENCES groups (id) ON DELETE CASCADE,
    subscription_type VARCHAR(50) NOT NULL CHECK (subscription_type IN ('SCHEDULE_EVERY_WEEK', 'SCHEDULE_EVERY_DAY')),
    PRIMARY KEY (group_id, subscription_type)
);

CREATE TABLE IF NOT EXISTS users_subscriptions_association
(
    user_id
    BIGINT
    NOT
    NULL
    REFERENCES
    users
(
    id
) ON DELETE CASCADE,
    subscription_type VARCHAR
(
    50
) NOT NULL CHECK
(
    subscription_type
    IN
(
    'SCHEDULE_EVERY_WEEK',
    'SCHEDULE_EVERY_DAY'
)),
    PRIMARY KEY
(
    user_id,
    subscription_type
)
    );